Given a language, define a representation for its grammar along with an interpreter that uses the representation to interpret sentences in the language.


What problems can the Interpreter design pattern solve?

- A grammar for a simple language should be defined
- So that sentences in the language can be interpreted.

When a problem occurs very often, it could be considered to represent it as a sentence in a simple language (Domain Specific Languages) 
so that an interpreter can solve the problem by interpreting the sentence.

For example, when many different or complex search expressions must be specified. Implementing (hard-wiring) them directly 
into a class is inflexible because it commits the class to particular expressions and makes it impossible to specify new expressions or 
change existing ones independently from (without having to change) the class.