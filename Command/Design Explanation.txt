The main motivation for using the Command pattern is that the executor of the command does not need to know anything at all about what 
the command is, what context information it needs on or what it does. All of that is encapsulated in the command.

This allows you to do things such as have a list of commands that are executed in order, that are dependent on other items, 
that are assigned to some triggering event etc.

Let us focus on the non-implementation aspect of the command design, and some main reasons for using the 
Command desing pattern grouped in two major categories:

- Hiding actual implementation of how the command is executed
- Allow methods to be built around command, aka command extensions